{"version":3,"file":"sidemenu.js","sources":["../../../../resources/js/lib/metadata.ts","../../../../resources/js/modules/bootstrap/components/CloseButton.vue","../../../../resources/js/modules/bootstrap/components/Offcanvas.vue","../../../../resources/js/modules/bootstrap/components/Button.vue","../../../../resources/js/modules/bootstrap/components/ToggleButton.vue","../../../../resources/js/tiers/website/apps/sidemenu.vue","../../../../resources/js/tiers/website/startup/sidemenu.ts"],"sourcesContent":["let _initData: any = null;\r\n\r\nexport type Url = {\r\n  api: string;\r\n  self: string;\r\n  base: {\r\n    absolute: string;\r\n    relative: string;\r\n  };\r\n};\r\n\r\nexport type Cms = {\r\n  type: { name: string; label: string }[];\r\n  category: any;\r\n  content: any;\r\n};\r\n\r\nexport type SettingsItem = {\r\n  type: string;\r\n  key?: string;\r\n  name: string;\r\n  label: string;\r\n  icon?: string;\r\n  defaultValue?: any;\r\n  attributes?: { [name: string]: any };\r\n  props?: { [name: string]: any };\r\n};\r\n\r\nexport type SettingsCategory = {\r\n  name: string;\r\n  label: string;\r\n  items: Array<SettingsItem>;\r\n};\r\n\r\nexport type Settings = Array<SettingsCategory>;\r\n\r\nexport type Language = {\r\n  value: string;\r\n  label: string;\r\n};\r\n\r\nexport type Metadata = {\r\n  env?: string;\r\n  id?: string;\r\n  name?: string;\r\n  language?: string;\r\n  languages?: Language[];\r\n  tier?: string;\r\n  token?: null | string;\r\n  user?: null | any;\r\n  isAuth?: boolean;\r\n  isGuest?: boolean;\r\n  translations?: { [msg: string]: string };\r\n  permissions?: any;\r\n  url?: Url;\r\n  isMobile?: boolean;\r\n  isTablet?: boolean;\r\n  isDesktop?: boolean;\r\n  cms?: Cms;\r\n  settings?: Settings;\r\n  balancesGroups?: string[][];\r\n  currenciesSort?: string[];\r\n};\r\n\r\nfunction decodeData(): any {\r\n  if (!_initData) {\r\n    const z = Math.pow(2, 3) + 2;\r\n    const t = Math.pow(2, 1);\r\n    const m = z * t * 5 + Math.pow(10, 2);\r\n    const n = [78, 80, 101, 82, 102, 90, 91]\r\n      .map((x) => String.fromCharCode(m - x))\r\n      .join(\"\");\r\n    const d = window;\r\n    const q = d[n];\r\n    const res = JSON.parse(\r\n      window.atob(\r\n        q\r\n          .map((value: any, i: any) =>\r\n            i > 0 ? String.fromCharCode(q.slice(0, 1).shift() - value) : null\r\n          )\r\n          .filter((x: any) => x !== null)\r\n          .join(\"\")\r\n      )\r\n    );\r\n    _initData = res;\r\n  }\r\n  return _initData;\r\n}\r\n\r\nlet _meta: null | Metadata = null;\r\n\r\nexport function metadata(): null | Metadata {\r\n  if (!_meta) {\r\n    _meta = decodeData();\r\n  }\r\n  return _meta;\r\n}\r\n\r\nlet _translations: any = null;\r\n\r\nexport function translate(message: string, ...params: any): string {\r\n  if (!_translations) {\r\n    _translations = metadata()?.translations;\r\n  }\r\n  if (_translations) {\r\n    message = _translations?.[message] ?? message;\r\n\r\n    if (Array.isArray(params)) {\r\n      params.forEach((item) => {\r\n        message = message.replace(\":?\", item);\r\n      });\r\n    }\r\n  }\r\n  return message;\r\n}\r\n\r\nexport function user(): null | any {\r\n  return metadata()?.user ?? null;\r\n}\r\n\r\nexport function token(): null | string {\r\n  return metadata()?.token ?? null;\r\n}\r\n\r\nlet _permissions: any = null;\r\n\r\nexport function can(permission: any): boolean {\r\n  if ([\"developer\", \"master\"].includes(user()?.type)) {\r\n    return true;\r\n  }\r\n\r\n  if (!_permissions) {\r\n    _permissions = metadata()?.permissions;\r\n  }\r\n\r\n  let permitted = false;\r\n  if (_permissions) {\r\n    permission.split(\"|\").forEach((perm: string) => {\r\n      permitted = permitted || _permissions.hasOwnProperty(perm);\r\n    });\r\n  }\r\n  return permitted;\r\n}\r\n\r\nexport function language(): string {\r\n  return metadata()?.language ?? \"en\";\r\n}\r\n\r\nexport function languages(): Language[] {\r\n  return metadata()?.languages ?? [];\r\n}\r\n\r\nexport function cms(): Cms | null {\r\n  return metadata()?.cms ?? null;\r\n}\r\n\r\nexport function settings(): Settings | null {\r\n  return metadata()?.settings ?? null;\r\n}\r\n","<template>\r\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" v-bind=\"$attrs\"></button>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { ref, onMounted, onUnmounted } from \"vue\";\r\nimport CloseButton from \"./CloseButton.vue\";\r\nimport { OffcanavsPlacement, OffcanavsResponsive } from \"../types\";\r\nimport Offcanvas from \"bootstrap/js/src/offcanvas\";\r\n\r\ntype Slots = {\r\n  default: any;\r\n  title: any;\r\n};\r\nconst slots = defineSlots<Slots>();\r\n\r\ntype Props = {\r\n  title?: string;\r\n  placement?: OffcanavsPlacement;\r\n  responsive?: null | OffcanavsResponsive;\r\n  backdrop?: boolean | \"static\";\r\n  keyboard?: boolean;\r\n  scroll?: boolean;\r\n  noHeader?: boolean;\r\n};\r\nconst {\r\n  title = \"\",\r\n  placement = \"start\",\r\n  responsive = null,\r\n  backdrop = \"static\",\r\n  keyboard = false,\r\n  scroll = false,\r\n  noHeader = false,\r\n} = defineProps<Props>();\r\n\r\nconst offcanvasRef = ref<any>(null);\r\nconst offcanvas = ref<any>(null);\r\n\r\ntype Emits = {\r\n  close: any;\r\n  closed: any;\r\n  prevented: any;\r\n  open: any;\r\n  opened: any;\r\n};\r\nconst emit = defineEmits<Emits>();\r\n\r\nconst onClose = (e) => {\r\n  emit(\"close\", e);\r\n};\r\n\r\nconst onClosed = (e) => {\r\n  emit(\"closed\", e);\r\n};\r\n\r\nconst onPrevented = (e) => {\r\n  emit(\"prevented\", e);\r\n};\r\n\r\nconst onOpen = (e) => {\r\n  emit(\"open\", e);\r\n};\r\n\r\nconst onOpened = (e) => {\r\n  emit(\"opened\", e);\r\n};\r\n\r\nconst create = () => {\r\n  offcanvas.value = new Offcanvas(offcanvasRef.value, {\r\n    backdrop,\r\n    keyboard,\r\n    scroll,\r\n  });\r\n  offcanvasRef.value.addEventListener(\"hide.bs.offcanvas\", onClose);\r\n  offcanvasRef.value.addEventListener(\"hidden.bs.offcanvas\", onClosed);\r\n  offcanvasRef.value.addEventListener(\"hidePrevented.bs.offcanvas\", onPrevented);\r\n  offcanvasRef.value.addEventListener(\"show.bs.offcanvas\", onOpen);\r\n  offcanvasRef.value.addEventListener(\"shown.bs.offcanvas\", onOpened);\r\n};\r\n\r\nconst open = () => {\r\n  offcanvas.value?.show?.();\r\n};\r\n\r\nconst close = () => {\r\n  offcanvas.value?.hide?.();\r\n};\r\n\r\ndefineExpose({ open, close });\r\n\r\nonMounted(() => {\r\n  create();\r\n});\r\n\r\nonUnmounted(() => {\r\n  offcanvasRef.value.removeEventListener(\"hide.bs.offcanvas\", onClose);\r\n  offcanvasRef.value.removeEventListener(\"hidden.bs.offcanvas\", onClosed);\r\n  offcanvasRef.value.removeEventListener(\r\n    \"hidePrevented.bs.offcanvas\",\r\n    onPrevented\r\n  );\r\n  offcanvasRef.value.removeEventListener(\"show.bs.offcanvas\", onOpen);\r\n  offcanvasRef.value.removeEventListener(\"shown.bs.offcanvas\", onOpened);\r\n});\r\n</script>\r\n<template>\r\n  <Teleport to=\"body\">\r\n    <div\r\n      ref=\"offcanvasRef\"\r\n      :class=\"{\r\n        [`offcanvas${responsive ? '-${responsive}' : ''}`]: true,\r\n        [`offcanvas-${placement}`]: true,\r\n        show: true,\r\n      }\"\r\n      tabindex=\"-1\"\r\n      aria-labelledby=\"offcanvasLabel\"\r\n      v-bind=\"$attrs\"\r\n    >\r\n      <div v-if=\"!noHeader\" class=\"offcanvas-header\">\r\n        <div class=\"offcanvas-title\">\r\n          <slot name=\"title\">\r\n            <h5>{{ title }}</h5>\r\n          </slot>\r\n        </div>\r\n        <CloseButton @click.prevent.stop=\"close\" />\r\n      </div>\r\n      <div class=\"offcanvas-body\">\r\n        <slot></slot>\r\n      </div>\r\n    </div>\r\n  </Teleport>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { computed, ref, nextTick } from \"vue\";\r\nimport type {\r\n  ButtonColor,\r\n  ButtonType,\r\n  ButtonSize,\r\n  SpinnerColor,\r\n  SpinnerType,\r\n} from \"../types\";\r\nimport Spinner from \"./Spinner.vue\";\r\n\r\ntype Props = {\r\n  color?: ButtonColor;\r\n  outline?: boolean;\r\n  size?: null | ButtonSize;\r\n  type?: ButtonType;\r\n  disabled?: boolean;\r\n  spinnerColor?: SpinnerColor;\r\n  spinnerType?: SpinnerType;\r\n  spinnerSmall?: boolean;\r\n  direction?: \"horizontal\" | \"vertical\";\r\n};\r\n\r\nconst {\r\n  color = \"primary\",\r\n  outline = false,\r\n  size = null,\r\n  type = \"button\",\r\n  disabled = false,\r\n  spinnerColor = \"primary\",\r\n  spinnerType = \"border\",\r\n  spinnerSmall = false,\r\n  direction = \"horizontal\",\r\n} = defineProps<Props>();\r\n\r\nconst classes = computed(() => {\r\n  const cls: any = { btn: true };\r\n  if (outline) {\r\n    cls[`btn-outline-${color}`] = true;\r\n  } else {\r\n    // cls[`btn-${color}`] = true;\r\n  }\r\n  if (size) {\r\n    cls[`btn-${size}`] = true;\r\n  }\r\n  return cls;\r\n});\r\n\r\nconst isDisabled = ref<boolean>(disabled);\r\nconst loading = ref<boolean>(false);\r\nconst btn = ref<any>(null);\r\n\r\nconst enable = () => {\r\n  isDisabled.value = false;\r\n};\r\n\r\nconst disable = () => {\r\n  isDisabled.value = true;\r\n};\r\n\r\nconst start = () => {\r\n  loading.value = true;\r\n  nextTick(() => {\r\n    disable();\r\n  });\r\n};\r\n\r\nconst stop = () => {\r\n  loading.value = false;\r\n  nextTick(() => {\r\n    enable();\r\n  });\r\n};\r\n\r\ndefineExpose({ enable, disable, start, stop, spinning: () => loading.value, element: () => btn.value });\r\n</script>\r\n<template>\r\n  <button :type=\"type\" :class=\"classes\" :disabled=\"isDisabled\" v-bind=\"$attrs\" ref=\"btn\">\r\n    <template v-if=\"loading\">\r\n      <Spinner :color=\"spinnerColor\" :type=\"spinnerType\" :small=\"spinnerSmall\" />\r\n    </template>\r\n    <template v-else>\r\n      <slot></slot>\r\n    </template>\r\n  </button>\r\n</template>\r\n<style scoped lang=\"scss\">\r\nbutton {\r\n  display: flex;\r\n  flex-direction: v-bind(direction);\r\n  // gap: 10px;\r\n  white-space: nowrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n</style>\r\n","<script setup lang=\"ts\">\r\nimport Button from \"@/modules/bootstrap/components/Button.vue\";\r\nimport { ref, onMounted, nextTick } from \"vue\";\r\n\r\ndefineOptions({\r\n  inheritAttrs: false,\r\n});\r\n\r\ntype Slots = {\r\n  default: any;\r\n  content(props: { element: (el: any) => void, closed: () => void }): any;\r\n};\r\ndefineSlots<Slots>();\r\n\r\nconst elementRef = ref<any>(null);\r\nconst opened = ref<boolean>(false);\r\n\r\nconst open = () => {\r\n  opened.value = true;\r\n  nextTick(() => {\r\n    elementRef.value?.open?.();\r\n    nextTick(() => {\r\n      elementRef.value?.update?.();\r\n    })\r\n  });\r\n};\r\n\r\nconst elementRefHandler = (el: any) => {\r\n  elementRef.value = el;\r\n};\r\n\r\nconst closed = () => {\r\n  opened.value = false;\r\n}\r\n\r\nonMounted(() => { });\r\n</script>\r\n<template>\r\n  <Button @click=\"open\" v-bind=\"$attrs\">\r\n    <slot></slot>\r\n  </Button>\r\n  <template v-if=\"opened\">\r\n    <slot name=\"content\" :element=\"elementRefHandler\" :closed=\"closed\"></slot>\r\n  </template>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { language, translate } from '@/lib/metadata';\r\nimport Offcanvas from '@/modules/bootstrap/components/Offcanvas.vue';\r\nimport ToggleButton from '@/modules/bootstrap/components/ToggleButton.vue';\r\nimport { defineProps, ref } from 'vue';\r\n\r\ninterface Item {\r\n    label: string,\r\n    url: string,\r\n}\r\n\r\ntype Props = {\r\n    list: Item[]\r\n    external: Item[],\r\n    // donationLink: string,\r\n};\r\nconst handleLinkClick = () => {\r\n    offcanvasElt.value.close();\r\n}\r\n\r\nconst { list, external } = defineProps<Props>();\r\nconst offcanvasElt = ref<any>(null)\r\nconst scrollTo = (id) => {\r\n    const section = document.getElementById(id);\r\n    console.log('id', id);\r\n\r\n    console.log('target', section);\r\n\r\n    offcanvasElt.value.close()\r\n    if (section) {\r\n        section.scrollIntoView({\r\n            behavior: 'smooth',\r\n            block: 'start',\r\n            inline: 'nearest'\r\n        })\r\n    }\r\n}\r\n\r\n// const offcanvas = ref<any>(null)\r\nconst canvasEl = (el: any, element: any) => {\r\n    element(el)\r\n    offcanvasElt.value = el;\r\n}\r\n\r\n</script>\r\n<template>\r\n    <ToggleButton class=\"btn-side\">\r\n        <web-icon path=\"mdiMenu\" id=\"menu-icon\" class=\"menu-hamburger\"></web-icon>\r\n        <template #content=\"{ element, closed }\">\r\n            <Offcanvas backdrop :ref=\"(el) => { canvasEl(el, element) }\" :placement=\"language() === 'ar' ? 'start' : 'end'\"\r\n                @closed=\"closed\">\r\n                <ul class=\"nav-menu\">\r\n                    <li v-for=\"(item, i) in list\" :key=\"i\">\r\n                        <a :href=\"item.url\" @click=\"handleLinkClick\">{{ item.label }}</a>\r\n                    </li>\r\n                </ul>\r\n            </Offcanvas>\r\n        </template>\r\n    </ToggleButton>\r\n</template>","/**\n * sidemenu.vue Startup File\n *\n * @project tripoline\n * @company Codendot <https://codendot.com>\n * @author Jawdat Sobh <jawdat@codendot.com>\n * @since Thursday, August 24, 2023 at 01:02 PM GMT+3\n *\n */\n\nimport { createApp } from \"@/lib/app\"\nimport AppComponent from \"../apps/sidemenu.vue\"\nimport bootstrap from \"../bootstrap/sidemenu\"\n\nconst app = createApp(\"sidemenu\", AppComponent)\nbootstrap(app)\napp.mount()\n"],"names":["language","_sfc_render","_ctx","_cache","_openBlock","_createElementBlock","_mergeProps","_useSlots","offcanvasRef","ref","offcanvas","onClose","emit","onClosed","onPrevented","onOpen","onOpened","create","Offcanvas","__props","open","_b","_a","close","__expose","onMounted","onUnmounted","classes","computed","cls","isDisabled","loading","btn","enable","disable","nextTick","elementRef","opened","elementRefHandler","el","closed","handleLinkClick","offcanvasElt","canvasEl","element","app","createApp","AppComponent"],"mappings":"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"}