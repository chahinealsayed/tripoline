{"version":3,"file":"contents.js","sources":["../../../../resources/js/modules/cms/forms/attrs.ts","../../../../resources/js/modules/cms/forms/content-local.ts","../../../../resources/js/modules/cms/forms/content.ts","../../../../resources/js/modules/bootstrap/components/Navs.vue","../../../../resources/js/modules/bootstrap/components/TabContent.vue","../../../../resources/js/components/Wait.vue","../../../../resources/js/modules/cms/lib/cms.ts","../../../../resources/js/modules/cms/forms/cateory-local.ts","../../../../resources/js/modules/cms/forms/category.ts","../../../../resources/js/modules/tree/Node.vue","../../../../resources/js/modules/tree/Tree.vue","../../../../resources/js/directives/click-outside.ts","../../../../resources/js/components/ContextMenu.vue","../../../../resources/js/modules/bootstrap/directives/tooltip.ts","../../../../resources/js/components/Ref.vue","../../../../resources/js/modules/cms/components/Categories.vue","../../../../resources/js/modules/seo/components/SeoModal.vue","../../../../resources/js/modules/cms/components/Contents.vue","../../../../resources/js/tiers/admin/startup/Contents.ts"],"sourcesContent":["import { createPrivateField } from '@/lib/private';\r\nimport { Model, DataList } from '@/modules/form/lib/model';\r\nimport { cms } from '@/lib/metadata';\r\n\r\nconst [fields, setFields] = createPrivateField<Attrs, any>({})\r\n\r\nexport class Attrs extends Model {\r\n\tstatic generate(\r\n\t\ttype: string,\r\n\t\tcolumn: string | number,\r\n\t\tinitData: DataList = {},\r\n        section: string = \"content\"\r\n    ) {\r\n        let typeName = type\r\n        let types = type.split(/\\[(.*)\\](.*)/).filter((element: any) => element)\r\n        if (types.length > 1) {\r\n            typeName = types[1]\r\n        }\r\n\t\tconst fieldsList =\r\n\t\t\tcms()?.[section][typeName]?.attrs?.find(\r\n\t\t\t\t(row) => `${row.column}` === `${column}`,\r\n\t\t\t)?.fields ?? []\r\n\t\tconst model = new Attrs(initData, (self: Attrs) => {\r\n\t\t\tsetFields(self, fieldsList)\r\n\t\t})\r\n\t\treturn model\r\n\t}\r\n\r\n\tget attrs() {\r\n\t\treturn fields(this)\r\n\t}\r\n\r\n\tpublic beforeCreate() {\r\n\t\tconst fieldsList = fields(this)\r\n\t\tfieldsList.forEach((data: any) => {\r\n\t\t\tthis.createField(\r\n\t\t\t\tdata.name,\r\n\t\t\t\tdata.label,\r\n\t\t\t\tthis.initData?.[data.name] ?? data.defaultValue ?? \"\",\r\n\t\t\t)\r\n\t\t\tconst field = this[data.name]\r\n\t\t\tthis.setField(field)\r\n\t\t})\r\n\t}\r\n\r\n\tget rules(): any[] {\r\n\t\treturn []\r\n\t}\r\n}\r\n","import { Model } from \"@/modules/form/lib/model\";\r\nimport { Attrs } from \"./attrs\";\r\nimport { Field } from \"@/modules/form/lib/field\";\r\nimport { DataList } from \"@/modules/form/types\";\r\nimport { StringRule } from \"@/modules/form/rules/string\";\r\nimport { RequiredRule } from \"@/modules/form/rules/required\";\r\n\r\nexport class ContentLocal extends Model {\r\n  type: string = \"default\";\r\n\r\n  get id(): Field {\r\n    return this.field(\"id\", \"ID\", this.initData?.id ?? null);\r\n  }\r\n\r\n  get contentId(): Field {\r\n    return this.field(\r\n      \"content_id\",\r\n      \"Content ID\",\r\n      this.initData?.content_id ?? null\r\n    );\r\n  }\r\n\r\n  get language(): Field {\r\n    return this.field(\"language\", \"Language\", this.initData?.language ?? \"en\");\r\n  }\r\n\r\n  get title(): Field {\r\n    return this.field(\"title\", \"Title\", this.initData?.title ?? \"\");\r\n  }\r\n\r\n  get excerpt(): Field {\r\n    return this.field(\"excerpt\", \"Excerpt\", this.initData?.excerpt ?? \"\");\r\n  }\r\n\r\n  get blocks(): Field {\r\n    return this.field(\"blocks\", \"Text\", this.initData?.blocks ?? {});\r\n  }\r\n\r\n  get attrs(): Attrs {\r\n    return this.hasOne(\"attrs\", (initData: DataList) => {\r\n      return Attrs.generate(this.type, \"local\", initData);\r\n    });\r\n  }\r\n\r\n  get rules(): any[] {\r\n    return [\r\n      [[this.title], StringRule],\r\n      [[this.title], RequiredRule],\r\n    ];\r\n  }\r\n}\r\n","import { ContentLocal } from \"./content-local\"\r\nimport { Attrs } from \"./attrs\"\r\nimport { Model } from \"@/modules/form/lib/model\"\r\nimport { Field } from \"@/modules/form/lib/field\"\r\nimport { DataList } from \"@/modules/form/types\"\r\n\r\nexport class Content extends Model {\r\n\tget id(): Field {\r\n\t\treturn this.field(\"id\", \"ID\", this.initData?.id ?? null)\r\n\t}\r\n\r\n\tget type(): Field {\r\n\t\treturn this.field(\"type\", \"Type\", this.initData?.type ?? \"default\")\r\n\t}\r\n\r\n\tget status(): Field {\r\n\t\treturn this.field(\"status\", \"Status\", this.initData?.status ?? \"active\")\r\n\t}\r\n\r\n\tget position(): Field {\r\n\t\treturn this.field(\"position\", \"Position\", this.initData?.position ?? \"0\")\r\n\t}\r\n\r\n\tget categories(): Field {\r\n\t\treturn this.field(\r\n\t\t\t\"categories\",\r\n\t\t\t\"Categories\",\r\n\t\t\tthis.initData?.categories ?? [],\r\n\t\t)\r\n\t}\r\n\r\n\tget attrs1(): Attrs {\r\n\t\treturn this.hasOne(\"attrs1\", (initData: DataList) => {\r\n\t\t\treturn Attrs.generate(\r\n\t\t\t\tthis.initData?.type ?? \"default\",\r\n\t\t\t\t\"1\",\r\n\t\t\t\tthis.initData.attrs,\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\tget attrs2(): Attrs {\r\n\t\treturn this.hasOne(\"attrs2\", (initData: DataList) => {\r\n\t\t\treturn Attrs.generate(\r\n\t\t\t\tthis.initData?.type ?? \"default\",\r\n\t\t\t\t\"2\",\r\n\t\t\t\tthis.initData.attrs,\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\tget attrs3(): Attrs {\r\n\t\treturn this.hasOne(\"attrs3\", (initData: DataList) => {\r\n\t\t\treturn Attrs.generate(\r\n\t\t\t\tthis.initData?.type ?? \"default\",\r\n\t\t\t\t\"3\",\r\n\t\t\t\tthis.initData.attrs,\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\tget locals(): ContentLocal[] {\r\n\t\treturn this.hasLocals(\r\n\t\t\t(initData: DataList) =>\r\n\t\t\t\tnew ContentLocal(initData, (self: any) => {\r\n\t\t\t\t\tself.type = this.initData.type ?? \"default\"\r\n\t\t\t\t}),\r\n\t\t)\r\n\t}\r\n\r\n\tget rules(): any[] {\r\n\t\treturn []\r\n\t}\r\n\r\n\tcontrolData(list: { [name: string]: any }): { [name: string]: any } {\r\n\t\tlist.attrs = { ...list.attrs1, ...list.attrs2, ...list.attrs3 }\r\n\t\tdelete list.attrs1\r\n\t\tdelete list.attrs2\r\n\t\tdelete list.attrs3\r\n\t\treturn list\r\n\t}\r\n}\r\n","<script setup lang=\"ts\" generic=\"T extends string = string\">\r\nimport { ref } from \"vue\";\r\nimport Icon from '@/components/Icon.vue';\r\n\r\ntype Tab = {\r\n  name: T;\r\n  label: string;\r\n  disabled?: boolean;\r\n  icon?: string | false;\r\n};\r\n\r\ntype Props = {\r\n  type?: \"tabs\" | \"pills\" | \"nav\";\r\n  tabs: Tab[];\r\n  alignment?: \"start\" | \"center\" | \"end\";\r\n  vertical?: boolean;\r\n  fill?: boolean;\r\n  justified?: boolean;\r\n  responsive?: boolean;\r\n};\r\n\r\nconst {\r\n  type = \"nav\",\r\n  tabs,\r\n  alignment = \"start\",\r\n  vertical = false,\r\n  fill = false,\r\n  justified = false,\r\n  responsive = false,\r\n} = defineProps<Props>();\r\n\r\ntype Slots = {\r\n  [Property in T as `${Property}-tab`]: (props: { tab: Tab }) => void;\r\n};\r\ndefineSlots<Slots>();\r\n\r\nconst active = ref<string>(tabs[0]?.name ?? \"\");\r\n\r\ntype Emits = {\r\n  select: [tab: Tab];\r\n};\r\nconst emit = defineEmits<Emits>();\r\n\r\nconst select = (tab: Tab) => {\r\n  active.value = tab.name;\r\n  emit(\"select\", tab);\r\n};\r\n</script>\r\n<template>\r\n  <ul\r\n    class=\"nav\"\r\n    :class=\"{\r\n      'nav-tabs': type === 'tabs',\r\n      'nav-pills': type === 'pills',\r\n      'nav-fill': fill,\r\n      'nav-justified': justified,\r\n      'flex-column': vertical,\r\n      'justify-content-start': alignment === 'start',\r\n      'justify-content-center': alignment === 'center',\r\n      'justify-content-end': alignment === 'end',\r\n      'flex-sm-row': responsive,\r\n    }\"\r\n    role=\"tablist\"\r\n  >\r\n    <template v-for=\"(tab, i) in tabs\" :key=\"i\">\r\n      <li\r\n        class=\"nav-item\"\r\n        :class=\"{\r\n          'flex-sm-fill': responsive,\r\n          'text-sm-center': responsive,\r\n        }\"\r\n      >\r\n        <a\r\n          href=\"#\"\r\n          class=\"nav-link\"\r\n          :class=\"{\r\n            disabled: tab.disabled ?? false,\r\n            active: active === tab.name,\r\n          }\"\r\n          :id=\"`tab-${tab.name}`\"\r\n          aria-current=\"page\"\r\n          @click.prevent=\"select(tab)\"\r\n          :disabled=\"tab.disabled\"\r\n        >\r\n          <slot :name=\"`${tab.name}-tab`\" :tab=\"tab\">\r\n            <template v-if=\"tab.icon\">\r\n              <Icon :path=\"tab.icon\" /> &nbsp;</template\r\n            ><span>{{ tab.label }}</span>\r\n          </slot>\r\n        </a>\r\n      </li>\r\n    </template>\r\n  </ul>\r\n</template>\r\n","<script setup lang=\"ts\" generic=\"T extends string = string\">\r\nimport { ref } from 'vue';\r\nimport Navs from './Navs.vue';\r\n\r\ntype Tab = {\r\n    name: T\r\n    label: string\r\n    disabled?: boolean\r\n    icon?: string | false\r\n}\r\n\r\ntype Props = {\r\n    type?: 'tabs' | 'pills' | 'nav'\r\n    tabs: Tab[],\r\n    alignment?: 'start' | 'center' | 'end'\r\n    vertical?: boolean\r\n    fill?: boolean\r\n    justified?: boolean\r\n    responsive?: boolean\r\n    disableNavs?: boolean\r\n}\r\n\r\nconst { type = \"nav\", tabs, alignment = \"start\", vertical = false, fill = false, justified = false, responsive = false, disableNavs = false } = defineProps<Props>()\r\n\r\ntype Slots = {\r\n  [Property in T]: (props: { tab: Tab }) => void;\r\n};\r\ndefineSlots<Slots>();\r\n\r\nconst active = ref<string>(tabs[0]?.name ?? '')\r\n\r\nconst select = (tab: Tab) => {\r\n    active.value = tab.name\r\n}\r\n\r\ndefineExpose({ select })\r\n</script>\r\n<template>\r\n    <template v-if=\"!disableNavs\">\r\n        <Navs\r\n            :type=\"type\"\r\n            :tabs=\"tabs\"\r\n            :alignment=\"alignment\"\r\n            :vertical=\"vertical\"\r\n            :fill=\"fill\"\r\n            :justified=\"justified\"\r\n            :responsive=\"responsive\"\r\n            @select=\"select\"\r\n        ></Navs>\r\n    </template>\r\n    <div class=\"tab-content\">\r\n        <template\r\n            v-for=\"(tab, i) in tabs\"\r\n            :key=\"i\"\r\n        >\r\n            <div\r\n                class=\"tab-pane fade\"\r\n                :class=\"{ show: active === tab.name, active: active === tab.name }\"\r\n                role=\"tabpanel\"\r\n                :aria-labelledby=\"`tab-${tab.name}`\"\r\n                :tabindex=\"i\"\r\n            >\r\n                <slot\r\n                    :name=\"tab.name\"\r\n                    :tab=\"tab\"\r\n                ></slot>\r\n            </div>\r\n        </template>\r\n    </div>\r\n</template>\r\n<style scoped lang=\"scss\">\r\n.tab-content {\r\n    min-height: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n\r\n    .tab-pane {\r\n        min-height: 100%;\r\n        flex: auto;\r\n    }\r\n}\r\n</style>\r\n","<script setup lang=\"ts\">\r\nimport { ref, onUnmounted } from 'vue';\r\n\r\ntype Props = {\r\n    time: number\r\n}\r\n\r\nconst { time } = defineProps<Props>()\r\n\r\nconst active = ref<boolean>(false)\r\n\r\nconst timer = setTimeout(() => {\r\n    active.value = true\r\n}, time)\r\n\r\nonUnmounted(() => {\r\n    clearTimeout(timer)\r\n})\r\n</script>\r\n<template>\r\n    <template v-if=\"active\">\r\n        <slot></slot>\r\n    </template>\r\n</template>\r\n","import { cms } from '@/lib/metadata';\r\n\r\nexport const splitType = (type): {id: null | number, name: string} => {\r\n\tlet name: string = type\r\n    let id:null | number = null\r\n\tlet types = type.split(/\\[(.*)\\](.*)/).filter((element: any) => element)\r\n\tif (types.length > 1) {\r\n\t\tid = +types[0]\r\n\t\tname = types[1]\r\n    }\r\n\r\n    return { id, name }\r\n}\r\n\r\nexport function maxContents (type) {\r\n    const { name } = splitType(type)\r\n    let hasMax = true\r\n    Object.entries(cms()?.content).forEach(([key, config]: any) => {\r\n        const names = key.split('.');\r\n        if (names[0] === name) {\r\n            hasMax = hasMax && (cms()?.content?.[key]?.max > 0)\r\n        }\r\n    })\r\n    return hasMax\r\n}\r\n","import { Model } from \"@/modules/form/lib/model\";\r\nimport { Attrs } from \"./attrs\";\r\nimport { Field } from \"@/modules/form/lib/field\";\r\nimport { DataList } from \"@/modules/form/types\";\r\nimport { StringRule } from \"@/modules/form/rules/string\";\r\nimport { RequiredRule } from \"@/modules/form/rules/required\";\r\n\r\nexport class CategoryLocal extends Model {\r\n  type: string = \"default\";\r\n\r\n  get id(): Field {\r\n    return this.field(\"id\", \"ID\", this.initData?.id ?? null);\r\n  }\r\n\r\n  get categoryId(): Field {\r\n    return this.field(\r\n      \"category_id\",\r\n      \"Category ID\",\r\n      this.initData?.category_id ?? null\r\n    );\r\n  }\r\n\r\n  get language(): Field {\r\n    return this.field(\"language\", \"Language\", this.initData?.language ?? \"en\");\r\n  }\r\n\r\n  get title(): Field {\r\n    return this.field(\"title\", \"Title\", this.initData?.title ?? \"\");\r\n  }\r\n\r\n  get excerpt(): Field {\r\n    return this.field(\"excerpt\", \"Excerpt\", this.initData?.excerpt ?? \"\");\r\n  }\r\n\r\n  get attrs(): Attrs {\r\n    return this.hasOne(\"attrs\", (initData: DataList) => {\r\n      return Attrs.generate(this.type, \"local\", initData, \"category\");\r\n    });\r\n  }\r\n\r\n  get rules(): any[] {\r\n    return [\r\n      [[this.title], StringRule],\r\n      [[this.title], RequiredRule],\r\n    ];\r\n  }\r\n}\r\n","import { Model } from \"@/modules/form/lib/model\";\r\nimport { Attrs } from \"./attrs\";\r\nimport { Field } from \"@/modules/form/lib/field\";\r\nimport { CategoryLocal } from \"./cateory-local\";\r\nimport { DataList } from \"@/modules/form/types\";\r\n\r\nexport class Category extends Model {\r\n  get id(): Field {\r\n    return this.field(\"id\", \"ID\", this.initData?.id ?? null);\r\n  }\r\n\r\n  get type(): Field {\r\n    return this.field(\"type\", \"Type\", this.initData?.type ?? \"default\");\r\n  }\r\n\r\n  get parentId(): Field {\r\n    return this.field(\r\n      \"parent_id\",\r\n      \"Parent ID\",\r\n      this.initData?.parent_id ?? null\r\n    );\r\n  }\r\n\r\n  get path(): Field {\r\n    return this.field(\"path\", \"Path\", this.initData?.path ?? null);\r\n  }\r\n\r\n  get status(): Field {\r\n    return this.field(\"status\", \"Status\", this.initData?.status ?? \"active\");\r\n  }\r\n\r\n  get position(): Field {\r\n    return this.field(\"position\", \"Position\", this.initData?.position ?? \"0\");\r\n  }\r\n\r\n  get locals(): CategoryLocal[] {\r\n    return this.hasLocals(\r\n      (initData: DataList) =>\r\n        new CategoryLocal(initData, (self: any) => {\r\n          self.type = this.initData.type ?? \"default\";\r\n        })\r\n    );\r\n  }\r\n\r\n  get attrs(): Attrs {\r\n    return this.hasOne(\"attrs\", (initData: DataList) => {\r\n      return Attrs.generate(\r\n        this.initData?.type ?? \"default\",\r\n        \"settings\",\r\n        this.initData.attrs,\r\n        \"category\"\r\n      );\r\n    });\r\n  }\r\n\r\n  get rules(): any[] {\r\n    return [];\r\n  }\r\n}\r\n","<script setup lang=\"ts\">\r\nimport { inject, ref, nextTick } from \"vue\";\r\nimport Nodes from \"./Nodes.vue\";\r\nimport ContentLoader from \"@/components/ContentLoader.vue\";\r\nimport Icon from '@/components/Icon.vue';\r\nimport { mdiMinusThick, mdiPlusThick } from \"@mdi/js\";\r\n\r\ntype Props = {\r\n  model: any;\r\n  index: number;\r\n  refresh: () => void;\r\n  level?: number;\r\n  defaultMsg?: boolean;\r\n};\r\n\r\nconst {\r\n  model,\r\n  index,\r\n  refresh,\r\n  level = 0,\r\n  defaultMsg = false,\r\n} = defineProps<Props>();\r\n\r\ntype Slots = {\r\n  default: (props: {\r\n    model: any;\r\n    level: number;\r\n    index: number;\r\n    refresh: () => void;\r\n  }) => void;\r\n};\r\ndefineSlots<Slots>();\r\n\r\nconst expanded = ref<boolean>(false);\r\nconst children = ref<any>([]);\r\nconst loader = ref<any>(null);\r\n\r\nconst toggle = () => {\r\n  expanded.value = !expanded.value;\r\n  nextTick(() => {\r\n    if (expanded.value && !children.length) {\r\n      fetch();\r\n    }\r\n  });\r\n};\r\n\r\nconst dataFactory: any = inject(\"dataFactory\");\r\n\r\nconst fetch = () => {\r\n  loader.value?.start();\r\n  dataFactory({ parent: model, level: level + 1, index }, (data: any) => {\r\n    children.value = data;\r\n    loader.value?.stop();\r\n  });\r\n};\r\n\r\nconst doRefresh = () => {\r\n  children.value = [];\r\n  nextTick(() => {\r\n    fetch();\r\n  });\r\n};\r\n</script>\r\n<template>\r\n  <div class=\"node\" :class=\"{ expanded }\">\r\n    <div class=\"node-header\">\r\n      <div class=\"prefix\">\r\n        <div class=\"toggle-icon\" @click.stop=\"toggle\">\r\n          <Icon :path=\"expanded?mdiMinusThick:mdiPlusThick\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"title\">\r\n        <slot\r\n          name=\"default\"\r\n          :model=\"model\"\r\n          :level=\"level\"\r\n          :index=\"index\"\r\n          :refresh=\"refresh\"\r\n        ></slot>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"expanded\" class=\"node-body\">\r\n      <ContentLoader ref=\"loader\" title=\"Data\" class=\"ps-4\">\r\n        <template v-if=\"children.length > 0\">\r\n          <Nodes\r\n            :parent=\"model\"\r\n            :children=\"children\"\r\n            :level=\"level + 1\"\r\n            :default-msg=\"defaultMsg\"\r\n            :refresh=\"doRefresh\"\r\n          >\r\n            <template #=\"{ model, level, index, refresh }\">\r\n              <slot\r\n                name=\"default\"\r\n                :model=\"model\"\r\n                :level=\"level\"\r\n                :index=\"index\"\r\n                :refresh=\"refresh\"\r\n              ></slot>\r\n            </template>\r\n          </Nodes>\r\n        </template>\r\n        <template v-else-if=\"defaultMsg\">\r\n          <div class=\"text-muted px-3\">There are no children yet</div>\r\n        </template>\r\n      </ContentLoader>\r\n    </div>\r\n  </div>\r\n</template>\r\n<style scoped lang=\"scss\">\r\n@import \"@scss/config\";\r\n@import \"@scss/mixins/font-size\";\r\n@import \"@scss/mixins/dark\";\r\n\r\n.node {\r\n  position: relative;\r\n\r\n  .node-header {\r\n    min-height: 40px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    user-select: none;\r\n\r\n    .prefix {\r\n      width: 40px;\r\n      min-width: 40px;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      .toggle-icon {\r\n        width: 40px;\r\n        min-width: 40px;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: center;\r\n        align-items: center;\r\n        cursor: pointer;\r\n        color: $gray-5;\r\n        @include font-size(1.5);\r\n        transition: all 0.25s ease;\r\n\r\n        &:hover {\r\n          color: $primary;\r\n        }\r\n      }\r\n    }\r\n\r\n    .title {\r\n      flex: auto;\r\n      display: flex;\r\n      flex-direction: row;\r\n    }\r\n  }\r\n\r\n  .node-body {\r\n    position: relative;\r\n    padding: 15px 0 15px 15px;\r\n\r\n    &:before {\r\n      content: \"\";\r\n      display: block;\r\n      position: absolute;\r\n      top: 0;\r\n      left: 19px;\r\n      width: 2px;\r\n      height: 100%;\r\n      background: $gray-5;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    > .node-header {\r\n      .prefix {\r\n        .toggle-icon {\r\n          color: $primary;\r\n        }\r\n      }\r\n\r\n      > .title {\r\n        color: $black;\r\n      }\r\n    }\r\n\r\n    > .node-body {\r\n      &:before {\r\n        background: $primary;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<script setup lang=\"ts\">\r\nimport { provide, ref, nextTick } from 'vue';\r\nimport Nodes from './Nodes.vue';\r\n\r\ntype Props = {\r\n    dataFactory: (args: { parent: any, level: number, index: number }, callback: (data: any) => void) => void,\r\n    defaultMsg?: boolean\r\n}\r\n\r\nconst { dataFactory, defaultMsg = false } = defineProps<Props>()\r\n\r\ntype Slots = {\r\n  default: (props: {\r\n    model: any;\r\n    level: number;\r\n    index: number;\r\n    refresh: () => void;\r\n  }) => void;\r\n};\r\ndefineSlots<Slots>();\r\n\r\nprovide('dataFactory', dataFactory)\r\n\r\nconst children = ref<any>([])\r\n\r\nconst fetch = () => {\r\n    dataFactory({ parent: null, level: 0, index: 0 }, (data: any) => {\r\n        children.value = data\r\n    })\r\n}\r\n\r\nconst refresh = () => {\r\n    children.value = []\r\n    nextTick(() => {\r\n        fetch()\r\n    })\r\n}\r\n\r\nfetch()\r\n\r\ndefineExpose({ refresh })\r\n</script>\r\n<template>\r\n    <div\r\n        v-if=\"children.length > 0\"\r\n        class=\"tree\"\r\n    >\r\n        <Nodes\r\n            :children=\"children\"\r\n            :refresh=\"refresh\"\r\n            :default-msg=\"defaultMsg\"\r\n        >\r\n            <template #=\"{ model, level, index, refresh }\">\r\n                <slot\r\n                    name=\"default\"\r\n                    :model=\"model\"\r\n                    :level=\"level\"\r\n                    :index=\"index\"\r\n                    :refresh=\"refresh\"\r\n                ></slot>\r\n            </template>\r\n        </Nodes>\r\n    </div>\r\n</template>\r\n<style scoped lang=\"scss\">\r\n.tree {\r\n    position: relative;\r\n    &,\r\n    * {\r\n        transition: all 0.25s ease;\r\n    }\r\n}\r\n</style>\r\n","const directive = {\r\n  beforeMount(el: any, binding: any, vnode: any) {\r\n    el.clickOutsideEvent = function (event: any) {\r\n      if (\r\n        !(el === event.target || el.contains(event.target)) &&\r\n        binding.value\r\n      ) {\r\n        binding.value(event, el);\r\n      }\r\n    };\r\n    document.addEventListener(\"click\", el.clickOutsideEvent);\r\n    document.addEventListener(\"touchstart\", el.clickOutsideEvent);\r\n  },\r\n  unmounted(el: any) {\r\n    document.removeEventListener(\"click\", el.clickOutsideEvent);\r\n    document.removeEventListener(\"touchstart\", el.clickOutsideEvent);\r\n  },\r\n};\r\n\r\nexport const vClickOutside = directive;\r\n","<script setup lang=\"ts\">\r\nimport { ref, nextTick } from \"vue\";\r\nimport { vClickOutside } from \"@/directives/click-outside\";\r\n\r\nconst active = ref<boolean>(false);\r\nconst contextMenu = ref<any>(null);\r\nconst element = ref<any>(null);\r\nconst x = ref<number | string>(0);\r\nconst y = ref<number | string>(0);\r\n\r\nconst emit = defineEmits([\"open\", \"close\"]);\r\n\r\nconst open = (event) => {\r\n  active.value = true;\r\n  document.body.click();\r\n  nextTick(() => {\r\n    calculatePosition(event.clientX, event.clientY);\r\n    emit(\"open\");\r\n  });\r\n};\r\n\r\nconst close = () => {\r\n  active.value = false;\r\n  emit(\"close\");\r\n};\r\n\r\nconst calculatePosition = (clientX: number, clientY: number) => {\r\n  x.value = clientX;\r\n  y.value = clientY;\r\n  const vw = Math.max(\r\n    document.documentElement.clientWidth || 0,\r\n    window.innerWidth || 0\r\n  );\r\n  const vh = Math.max(\r\n    document.documentElement.clientHeight || 0,\r\n    window.innerHeight || 0\r\n  );\r\n  if (contextMenu.value) {\r\n    const { width, height } = contextMenu.value.getBoundingClientRect();\r\n    if (width + x.value > vw && x.value - width < 0) {\r\n      x.value = Math.ceil((width + x.value) / 2);\r\n    } else if (width + x.value > vw) {\r\n      x.value -= width;\r\n    }\r\n    if (height + y.value > vh && y.value - height < 0) {\r\n      y.value = Math.ceil((height + y.value) / 2);\r\n    } else if (height + y.value > vh) {\r\n      y.value -= height;\r\n    }\r\n  }\r\n  x.value = `${x.value}px`;\r\n  y.value = `${y.value}px`;\r\n};\r\n\r\ndefineExpose({ open, close });\r\n</script>\r\n<template>\r\n  <slot name=\"default\" ref=\"element\" :open=\"(event) => open(event)\"></slot>\r\n  <Teleport to=\"body\">\r\n    <div\r\n      v-if=\"active\"\r\n      ref=\"contextMenu\"\r\n      class=\"context-menu\"\r\n      v-click-outside=\"close\"\r\n    >\r\n      <slot name=\"contextmenu\">\r\n        <div class=\"fallback\">No content found</div>\r\n      </slot>\r\n    </div>\r\n  </Teleport>\r\n</template>\r\n<style scoped lang=\"scss\">\r\n@import \"@scss/config\";\r\n@import \"@scss/mixins/dark\";\r\n\r\n.context-menu {\r\n  position: absolute;\r\n  top: v-bind(y);\r\n  left: v-bind(x);\r\n  display: block;\r\n  padding: 10px;\r\n  background: $white;\r\n  border: 1px solid $gray-2;\r\n  min-width: 200px;\r\n  width: fit-content;\r\n  border-radius: 10px;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);\r\n  white-space: nowrap;\r\n  z-index: 100000;\r\n  user-select: none;\r\n  @include dark {\r\n    background: $gray-9;\r\n    border: 1px solid $gray-7;\r\n  }\r\n\r\n  .fallback {\r\n    position: relative;\r\n    color: $gray-6;\r\n    user-select: none;\r\n    @include dark {\r\n      color: $gray-3;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import { Tooltip } from \"bootstrap\";\r\n\r\nconst tooltips = new Map<HTMLElement, Tooltip>();\r\n\r\nconst directive = {\r\n  beforeMount(el: HTMLElement, binding: any, vnode: any) {\r\n    let options: any = {};\r\n    if (typeof binding.value === \"object\") {\r\n      el.setAttribute(\"title\", binding.value?.title ?? null);\r\n      options = { ...options, ...binding.value };\r\n    } else if (typeof binding.value === \"string\") {\r\n      el.setAttribute(\"title\", binding.value);\r\n      options.title = binding.value;\r\n    }\r\n    tooltips.set(el, new Tooltip(el, options));\r\n  },\r\n  beforeUnmount(el: HTMLElement) {\r\n    tooltips.get(el)?.dispose();\r\n    tooltips.delete(el);\r\n  },\r\n};\r\n\r\nexport const vTooltip = directive;\r\n","<script lang=\"ts\">\r\nconst cache: any = {};\r\nconst components: any = [];\r\n</script>\r\n<script setup lang=\"ts\">\r\nimport { api } from \"@/lib/api\";\r\nimport {\r\n  onMounted,\r\n  ref,\r\n  getCurrentInstance,\r\n  ComponentInternalInstance,\r\n  nextTick,\r\n} from \"vue\";\r\nimport ContentLoader from \"./ContentLoader.vue\";\r\nimport { ucFirst } from \"@/lib/helper/strings\";\r\nimport ContextMenu from \"./ContextMenu.vue\";\r\nimport { user } from \"@/lib/metadata\";\r\nimport { vTooltip } from \"@/modules/bootstrap/directives/tooltip\";\r\nimport Icon from \"@/components/Icon.vue\";\r\nimport { mdiCheckboxBlankOutline, mdiCheckboxMarkedOutline } from \"@mdi/js\";\r\n\r\ntype Props = {\r\n  value: number | string;\r\n  startWith: string;\r\n};\r\n\r\nconst { value, startWith } = defineProps<Props>();\r\n\r\nconst instance = getCurrentInstance();\r\ncomponents.push(instance);\r\n\r\nconst items = ref<any>(null);\r\nconst loader = ref<any>(null);\r\nconst selectedItem = ref<any>(null);\r\nconst contextMenu = ref<any>(null);\r\n\r\nconst fetch = (force: boolean = false) => {\r\n  return new Promise((resolve) => {\r\n    loader.value?.start();\r\n    items.value = null;\r\n    if (!force && Object.hasOwn(cache, startWith)) {\r\n      nextTick(() => {\r\n        items.value = [...cache[startWith]];\r\n        findSelectedItem();\r\n        loader.value?.stop();\r\n        resolve(items.value);\r\n      });\r\n    } else {\r\n      api()\r\n        .get(`/settings/references?startWith=${startWith}`)\r\n        .then(({ data }: any) => {\r\n          items.value = cache[startWith] = data.map((item: any) => {\r\n            return updateItem(item);\r\n          });\r\n          findSelectedItem();\r\n          resolve(items.value);\r\n        })\r\n        .finally(() => {\r\n          loader.value?.stop();\r\n        });\r\n    }\r\n  });\r\n};\r\n\r\nconst updateItem = (item: any) => {\r\n  return {\r\n    ...item,\r\n    label: item.name\r\n      .split(\".\")\r\n      .reverse()\r\n      .map((word: string) => ucFirst(word))\r\n      .join(\" \"),\r\n  };\r\n};\r\n\r\nconst findSelectedItem = () => {\r\n  selectedItem.value = null;\r\n  items.value.forEach((item: any) => {\r\n    if (+item.value === +value) {\r\n      selectedItem.value = { ...updateItem(item) };\r\n    }\r\n  });\r\n};\r\n\r\nconst save = (item: any) => {\r\n  const oldId = selectedItem.value?.id ?? 0;\r\n  const newId = item.id;\r\n  if (oldId !== newId) {\r\n    api()\r\n      .post(\"/settings/references\", { oldId, newId, value })\r\n      .finally(() => {\r\n        contextMenu.value?.close();\r\n        fetch(true).then(() => {\r\n          components.forEach(\r\n            (component: ComponentInternalInstance | null, index: number) => {\r\n              if (component?.uid !== instance?.uid) {\r\n                component?.exposed?.fetch();\r\n              }\r\n            }\r\n          );\r\n        });\r\n      });\r\n    selectedItem.value = { ...item, value };\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  fetch();\r\n});\r\n\r\ndefineExpose({ fetch });\r\n</script>\r\n<template>\r\n  <template v-if=\"user().type === 'developer'\">\r\n    <ContextMenu ref=\"contextMenu\">\r\n      <template #=\"{ open }\">\r\n        <span @click.right.prevent=\"open($event)\">\r\n          <slot>{{ value }}</slot\r\n          ><sup\r\n            v-if=\"selectedItem && +selectedItem.value === +value\"\r\n            v-tooltip=\"`${selectedItem.label}\\n${selectedItem.name}`\"\r\n            class=\"text-danger\"\r\n            >*</sup\r\n          >\r\n        </span>\r\n      </template>\r\n      <template #contextmenu>\r\n        <ContentLoader ref=\"loader\" title=\"References\">\r\n          <template v-if=\"items && items.length > 0\">\r\n            <ul class=\"list-group list-group-flush\">\r\n              <template v-for=\"item in items\" :key=\"item.id\">\r\n                <li class=\"list-group-item p-0\" @click=\"save(item)\">\r\n                  <div class=\"item\">\r\n                    <template\r\n                      v-if=\"selectedItem && +selectedItem.value === +item.value\"\r\n                    >\r\n                      <Icon :path=\"mdiCheckboxMarkedOutline\" color=\"success\" />\r\n                    </template>\r\n                    <template v-else>\r\n                      <Icon :path=\"mdiCheckboxBlankOutline\" color=\"muted\" />\r\n                    </template>\r\n                    <span class=\"name\">\r\n                      {{ item.label }}\r\n                    </span>\r\n                  </div>\r\n                </li>\r\n              </template>\r\n            </ul>\r\n          </template>\r\n          <template v-else>\r\n            <div class=\"text-muted\">There are no references yet</div>\r\n          </template>\r\n        </ContentLoader>\r\n      </template>\r\n    </ContextMenu>\r\n  </template>\r\n  <template v-else>\r\n    <slot>{{ value }}</slot>\r\n  </template>\r\n</template>\r\n<style scoped lang=\"scss\">\r\n@import \"@scss/config\";\r\n@import \"@scss/mixins/font-size\";\r\n@import \"@scss/mixins/dark\";\r\n\r\n.item {\r\n  display: flex;\r\n  flex-direction: row;\r\n  cursor: pointer;\r\n  gap: 5px;\r\n  align-items: center;\r\n  height: 40px;\r\n\r\n  .name {\r\n    color: $gray-8;\r\n    @include font-size(1);\r\n    @include dark {\r\n      color: $gray-1;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<script setup lang=\"ts\">\r\nimport { Category } from \"@/modules/cms/forms/category\";\r\nimport { api } from \"@/lib/api\";\r\nimport Button from \"@/modules/bootstrap/components/Button.vue\";\r\nimport ModalForm from \"@/modules/form/components/helper/ModalForm.vue\";\r\nimport { ref, computed } from \"vue\";\r\nimport Icon from \"@/components/Icon.vue\";\r\nimport { mdiCogOutline, mdiPencil, mdiPlusThick, mdiTranslate } from \"@mdi/js\";\r\nimport Tree from \"@/modules/tree/Tree.vue\";\r\nimport Navs from \"@/modules/bootstrap/components/Navs.vue\";\r\nimport { languages } from \"@/lib/metadata\";\r\nimport TabContent from \"@/modules/bootstrap/components/TabContent.vue\";\r\nimport StringInput from \"@/modules/form/components/StringInput.vue\";\r\nimport TextInput from \"@/modules/form/components/TextInput.vue\";\r\nimport AttrsInput from \"@/modules/cms/components/AttrsInput.vue\";\r\nimport RadioInput from \"@/modules/form/components/RadioInput.vue\";\r\nimport Ref from \"@/components/Ref.vue\";\r\n\r\ntype Props = {\r\n  type: string;\r\n  id?: number;\r\n};\r\n\r\nconst { type, id = 0 } = defineProps<Props>();\r\n\r\nconst modal = ref<any>(null);\r\nconst tree = ref<any>(null);\r\nconst refresher = ref<any>(null);\r\nconst tabContent = ref<any>(null);\r\n\r\nconst factory = (\r\n  args: { parent: any; level: number; index: number },\r\n  callback: (data: any) => void\r\n) => {\r\n  fetch(args.parent).then((data: any) => {\r\n    callback(data);\r\n  });\r\n};\r\n\r\nconst fetch = (parent: any) => {\r\n  return new Promise((resolve) => {\r\n    api()\r\n      .get(\r\n        `/categories?expand=local,locals&filter[type][like]=${\r\n          id > 0 ? `[${id}]` : ``\r\n        }${type}&filter[parent_id]=${\r\n          parent?.id ?? null\r\n        }&sort=position,local.name`\r\n      )\r\n      .then(({ data }: any) => {\r\n        resolve(data);\r\n      });\r\n  });\r\n};\r\n\r\nconst add = (refresh, parent: any = null) => {\r\n  refresher.value = refresh;\r\n  modal.value?.open?.({\r\n    type: `${id > 0 ? `[${id}]` : ``}${type}`,\r\n    parent_id: parent?.id ?? null,\r\n    path: parent?.id\r\n      ? `${[parent.id]\r\n          .reduce(\r\n            (list, item) => {\r\n              list.push(item);\r\n              return list;\r\n            },\r\n            parent.path ? parent.path.split(\",\") : []\r\n          )\r\n          .join(\",\")}`\r\n      : null,\r\n  });\r\n};\r\n\r\nconst edit = (refresh, data: any) => {\r\n  refresher.value = refresh;\r\n  modal.value?.open?.(data);\r\n};\r\n\r\nconst remove = (data: any) => {};\r\n\r\nconst save = (model: Category, done: () => void) => {\r\n  let request;\r\n  if (model.isNewRecord) {\r\n    request = api().post(\"/categories\", model.data);\r\n  } else {\r\n    request = api().put(`/categories/${model.id.value}`, model.data);\r\n  }\r\n  request.then(() => {\r\n    done();\r\n    if (refresher.value) {\r\n      refresher.value();\r\n      refresher.value = null;\r\n    }\r\n  });\r\n};\r\n\r\nconst tabs = computed(() => {\r\n  return [\r\n    ...languages().map((language: any) => {\r\n      return {\r\n        name: language.value,\r\n        label: language.label,\r\n        icon: mdiTranslate,\r\n      };\r\n    }),\r\n    { name: \"settings\", label: \"Settings\", icon: mdiCogOutline },\r\n  ];\r\n});\r\n\r\nconst statusList = computed(() => {\r\n  return [\r\n    {\r\n      value: \"active\",\r\n      label: \"Active\",\r\n    },\r\n    {\r\n      value: \"draft\",\r\n      label: \"Draft\",\r\n    },\r\n    {\r\n      value: \"pending\",\r\n      label: \"Pending\",\r\n    },\r\n    {\r\n      value: \"deleted\",\r\n      label: \"Deleted\",\r\n    },\r\n  ];\r\n});\r\n\r\nconst select = (tab: any) => {\r\n  tabContent.value.select(tab);\r\n};\r\n</script>\r\n<template>\r\n  <div class=\"actions\">\r\n    <Button v-if=\"tree\" color=\"primary\" @click=\"add(tree.refresh)\">\r\n      <Icon :path=\"mdiPlusThick\" />Add New Category\r\n    </Button>\r\n  </div>\r\n  <div class=\"categories\">\r\n    <Tree ref=\"tree\" :data-factory=\"factory\" default-msg>\r\n      <template #=\"{ model, level, index, refresh }\">\r\n        <div class=\"category-node\">\r\n          <div class=\"name\">\r\n            <Ref\r\n              :key=\"model.id\"\r\n              :value=\"model.id\"\r\n              :start-with=\"`cms.categories.${id > 0 ? `${id}.` : ``}${type}`\"\r\n            >\r\n              {{ model.local.title }}\r\n            </Ref>\r\n          </div>\r\n          <div class=\"node-actions\">\r\n            <Button color=\"primary\" size=\"sm\" @click=\"add(refresh, model)\">\r\n              <Icon :path=\"mdiPlusThick\" />\r\n            </Button>\r\n            <Button color=\"primary\" size=\"sm\" @click=\"edit(refresh, model)\">\r\n              <Icon :path=\"mdiPencil\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </template>\r\n    </Tree>\r\n  </div>\r\n  <ModalForm\r\n    name=\"Category\"\r\n    :model-class=\"Category\"\r\n    size=\"lg\"\r\n    ref=\"modal\"\r\n    @save=\"save\"\r\n  >\r\n    <template #header>\r\n      <Navs\r\n        type=\"pills\"\r\n        :tabs=\"tabs\"\r\n        alignment=\"center\"\r\n        @select=\"select\"\r\n        style=\"flex: auto\"\r\n      ></Navs>\r\n    </template>\r\n    <template #=\"{ model }\">\r\n      <TabContent :tabs=\"tabs\" type=\"tabs\" disable-navs ref=\"tabContent\">\r\n        <template #navs></template>\r\n        <template\r\n          v-for=\"(language, i) in languages()\"\r\n          :key=\"language.value\"\r\n          #[language.value]=\"{ tab }\"\r\n        >\r\n          <div class=\"box mb-3\">\r\n            <div class=\"h6\">{{ language.label }}</div>\r\n            <div\r\n              :style=\"[\r\n                language.value === 'ar'\r\n                  ? { direction: 'rtl' }\r\n                  : { direction: 'ltr' },\r\n              ]\"\r\n            >\r\n              <div class=\"mb-3\">\r\n                <StringInput\r\n                  :field=\"model.locals[i].title\"\r\n                  :style=\"[\r\n                    language.value === 'ar'\r\n                      ? { direction: 'rtl', 'text-align': 'right' }\r\n                      : { direction: 'ltr', 'text-align': 'left' },\r\n                  ]\"\r\n                ></StringInput>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <TextInput\r\n                  :field=\"model.locals[i].excerpt\"\r\n                  :style=\"[\r\n                    language.value === 'ar'\r\n                      ? { direction: 'rtl', 'text-align': 'right' }\r\n                      : { direction: 'ltr', 'text-align': 'left' },\r\n                  ]\"\r\n                ></TextInput>\r\n              </div>\r\n              <AttrsInput :model=\"model.locals[i].attrs\" />\r\n            </div>\r\n          </div>\r\n        </template>\r\n        <template #settings=\"{ tab }\">\r\n          <AttrsInput :model=\"model.attrs\" />\r\n          <div class=\"mb-3\">\r\n            <StringInput :field=\"model.position\" type=\"number\"></StringInput>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <RadioInput\r\n              :field=\"model.status\"\r\n              :options=\"statusList\"\r\n              inline\r\n            ></RadioInput>\r\n          </div>\r\n        </template>\r\n      </TabContent>\r\n    </template>\r\n  </ModalForm>\r\n</template>\r\n<style scoped lang=\"scss\">\r\n@import \"@scss/config\";\r\n@import \"@scss/mixins/font-size\";\r\n@import \"@scss/mixins/dark\";\r\n\r\n.actions {\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n  background: $gray-1;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  @include dark {\r\n    background: $gray-8;\r\n  }\r\n}\r\n\r\n.categories {\r\n  position: relative;\r\n}\r\n\r\n.category-node {\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  height: 40px;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n  border-radius: 10px;\r\n  transition: all 0.25s ease;\r\n\r\n  .name {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex: auto;\r\n    color: $gray-9;\r\n    @include dark {\r\n      color: $gray-1;\r\n    }\r\n  }\r\n\r\n  .node-actions {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: fit-content;\r\n    gap: 5px;\r\n  }\r\n\r\n  &:hover {\r\n    background: $gray-1;\r\n    @include dark {\r\n      background: $gray-8;\r\n    }\r\n    .name {\r\n      color: $gray-9;\r\n      @include dark {\r\n        color: $gray-1;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<script setup lang=\"ts\">\r\nimport Button from \"@/modules/bootstrap/components/Button.vue\";\r\nimport Modal from \"@/modules/bootstrap/components/Modal.vue\";\r\nimport { ref } from \"vue\";\r\nimport Icon from \"@/components/Icon.vue\";\r\nimport { mdiSearchWeb } from \"@mdi/js\";\r\nimport Seo from \"./Seo.vue\";\r\n\r\ndefineOptions({\r\n  inheritAttrs: false,\r\n});\r\n\r\nexport type Props = {\r\n  target?: string;\r\n  title?: string;\r\n};\r\nconst { target = \"\", title = \"\" } = defineProps<Props>();\r\n\r\nconst modal = ref<any>(null);\r\n\r\nconst open = () => {\r\n  modal.value?.open();\r\n};\r\n</script>\r\n<template>\r\n  <Button v-bind=\"$attrs\" @click=\"open\" class=\"btn btn-warning\">\r\n    <Icon :path=\"mdiSearchWeb\" /> Seo\r\n  </Button>\r\n  <Modal ref=\"modal\" :title=\"`${title ?? target} SEO`\" size=\"xl\">\r\n    <Seo :target=\"target\"></Seo>\r\n  </Modal>\r\n</template>\r\n","<script setup lang=\"ts\">\r\nimport { cms, languages, translate } from \"@/lib/metadata\";\r\nimport Crud from \"@/modules/crud/components/Crud.vue\";\r\nimport { FieldType, createFields, fetch } from \"@/modules/crud/lib/crud\";\r\nimport { ref, computed } from \"vue\";\r\nimport Button from \"@/modules/bootstrap/components/Button.vue\";\r\nimport Icon from \"@/components/Icon.vue\";\r\nimport {\r\n  mdiCogOutline,\r\n  mdiDelete,\r\n  mdiFileTree,\r\n  mdiPencil,\r\n  mdiPlusThick,\r\n  mdiRayStart,\r\n  mdiTranslate,\r\n} from \"@mdi/js\";\r\nimport { Content } from \"@/modules/cms/forms/content\";\r\nimport { api } from \"@/lib/api\";\r\nimport ModalForm from \"@/modules/form/components/helper/ModalForm.vue\";\r\nimport Navs from \"@/modules/bootstrap/components/Navs.vue\";\r\nimport TabContent from \"@/modules/bootstrap/components/TabContent.vue\";\r\nimport StringInput from \"@/modules/form/components/StringInput.vue\";\r\nimport TextInput from \"@/modules/form/components/TextInput.vue\";\r\nimport AttrsInput from \"@/modules/cms/components/AttrsInput.vue\";\r\nimport EditorInput from \"@/modules/editor/components/EditorInput.vue\";\r\nimport CheckInput from \"@/modules/form/components/checkInput.vue\";\r\nimport RadioInput from \"@/modules/form/components/RadioInput.vue\";\r\nimport { displayTree } from \"@/lib/helper/array\";\r\nimport { confirm } from \"@/modules/bootstrap/lib/confirm\";\r\nimport { successToast } from \"@/modules/bootstrap/lib/toast\";\r\nimport Wait from \"@/components/Wait.vue\";\r\nimport { icon, na } from \"@/lib/helper/strings\";\r\nimport { maxContents } from \"../lib/cms\";\r\nimport Modal from \"@/modules/bootstrap/components/Modal.vue\";\r\nimport Categories from \"./Categories.vue\";\r\nimport Ref from \"@/components/Ref.vue\";\r\nimport EditorView from \"@/modules/editor/components/EditorView.vue\";\r\nimport { createComponent } from '@/lib/create-component';\r\nimport SeoModal from \"@/modules/seo/components/SeoModal.vue\";\r\n\r\ntype Props = {\r\n  type: string;\r\n  id?: number;\r\n};\r\n\r\nconst { type, id = 0 } = defineProps<Props>();\r\n\r\nconst crud = ref<any>(null);\r\nconst modal = ref<any>(null);\r\n\r\nconst categoriesModal = ref<any>(null);\r\nconst tabContent = ref<any>(null);\r\nconst categories = ref<any>(null);\r\nconst textCols = ref<any>([]);\r\n\r\ntype Item = {\r\n  id?: number;\r\n  type?: string;\r\n  status?: \"active\" | \"draft\" | \"pendig\" | \"deleted\";\r\n  position?: number;\r\n  attrs?: any;\r\n  local?: {\r\n    id?: number;\r\n    content_id?: number;\r\n    language?: string;\r\n    title?: string;\r\n    excerpt?: string;\r\n    blocks?: any;\r\n    plain_text?: string;\r\n    attrs?: any;\r\n  };\r\n};\r\n\r\nconst fields = createFields(\r\n  {\r\n    type: FieldType.Number,\r\n    name: \"id\",\r\n    label: \"ID\",\r\n    fitable: true,\r\n    sortable: true,\r\n    searchable: true,\r\n  },\r\n  {\r\n    type: FieldType.String,\r\n    name: \"title\",\r\n    label: \"Title\",\r\n    searchable: true,\r\n    sortable: true,\r\n  },\r\n  {\r\n    type: FieldType.String,\r\n    name: \"status\",\r\n    label: \"Status\",\r\n    fitable: true,\r\n    searchable: true,\r\n    sortable: true,\r\n  },\r\n  {\r\n    type: FieldType.Number,\r\n    name: \"position\",\r\n    label: \"Position\",\r\n    fitable: true,\r\n    searchable: true,\r\n    sortable: true,\r\n  },\r\n  {\r\n    type: FieldType.Number,\r\n    name: \"type\",\r\n    label: \"Type\",\r\n    fitable: true,\r\n    searchable: true,\r\n    sortable: true,\r\n  }\r\n);\r\n\r\nconst title = computed(\r\n  () => cms()?.type?.find((item: any) => item.name === type)?.label ?? type\r\n);\r\n\r\nconst add = () => {\r\n  modal.value?.open?.({ type: `${id > 0 ? `[${id}]` : ``}${type}` });\r\n};\r\nconst edit = (data) => {\r\n  const record = { ...data }\r\n  if (record.categories) {\r\n    record.categories = record.categories.map((item: any) => item.id);\r\n  }\r\n  modal.value?.open?.(record);\r\n};\r\nconst save = (model: Content, done: () => void) => {\r\n  let request;\r\n  if (model.isNewRecord) {\r\n    request = api().post(\"/contents\", model.data);\r\n  } else {\r\n    request = api().put(`/contents/${model.id.value}`, model.data);\r\n  }\r\n  request.then(() => {\r\n    successToast(\r\n      `${title.value} ${model.locals[0].title.value} Saved Successfully`\r\n    );\r\n    crud.value?.refresh();\r\n    done();\r\n  });\r\n};\r\n\r\nconst remove = (data: any) => {\r\n  confirm(`Delete ${data.locals[0].title}`).then((confirmed: boolean) => {\r\n    if (confirmed) {\r\n      api()\r\n        .delete(`/contents/${data.id}`)\r\n        .then(() => {\r\n          successToast(\r\n            `Content \"${data.locals[0].title}\" deleted successfully`\r\n          );\r\n          crud.value?.refresh();\r\n        });\r\n    }\r\n  });\r\n};\r\n\r\nconst tabs = computed(() => {\r\n  return [\r\n    ...languages().map((language: any) => {\r\n      return {\r\n        name: language.value,\r\n        label: language.label,\r\n        icon: mdiTranslate,\r\n      };\r\n    }),\r\n    { name: \"settings\", label: \"Settings\", icon: mdiCogOutline },\r\n  ];\r\n});\r\n\r\nconst select = (tab: any) => {\r\n  tabContent.value.select(tab);\r\n};\r\n\r\nconst updateTextCol = (el: any) => {\r\n  textCols.value.push(el);\r\n};\r\n\r\nconst statusList = computed(() => {\r\n  return [\r\n    {\r\n      value: \"active\",\r\n      label: \"Active\",\r\n    },\r\n    {\r\n      value: \"draft\",\r\n      label: \"Draft\",\r\n    },\r\n    {\r\n      value: \"pending\",\r\n      label: \"Pending\",\r\n    },\r\n    {\r\n      value: \"deleted\",\r\n      label: \"Deleted\",\r\n    },\r\n  ];\r\n});\r\n\r\nconst settingsCols = computed(() => {\r\n  if (Array.isArray(categories.value) && categories.value.length > 0) {\r\n    return \"col-md-3\";\r\n  }\r\n  return \"col-md-4\";\r\n});\r\n\r\nconst fetchCategories = () => {\r\n  categories.value = [];\r\n  api()\r\n    .get(\r\n      `/categories?expand=local&filter[type]=${type}&sort=position,local.name`\r\n    )\r\n    .then(async ({ data }: any) => {\r\n      // const icon = await (createComponent<IconProps, IconExpose, any>(Icon))({\r\n      //       path: mdiRayStart,\r\n      //     });\r\n      //     console.log(icon)\r\n      // console.log(mdiRayStart)\r\n      // console.log(icon.svg())\r\n      categories.value = displayTree(\r\n        (item: any, prefix: string, level: number, hasChildren: boolean) => {\r\n          return {\r\n            value: item.id,\r\n            label: `${prefix}&nbsp;${item.local.title}`,\r\n            title: item.local.title,\r\n          };\r\n        },\r\n        data,\r\n        {\r\n          delimiter: icon({ path: mdiRayStart })\r\n        }\r\n      );\r\n    });\r\n};\r\n\r\nconst openCategories = () => {\r\n  categoriesModal.value?.open?.();\r\n};\r\n\r\nconst closeCategories = () => {\r\n  fetchCategories();\r\n};\r\n\r\nfetchCategories();\r\n</script>\r\n<template>\r\n  <Crud ref=\"crud\" :fields=\"fields\" :fetch=\"fetch<\r\n    Item>\r\n    ('/contents',\r\n      'local,locals,categories',\r\n      { filter: { type: { like: `${id > 0 ? `[${id}]` : ``}${type}` } } })\r\n    \">\r\n    <template #topActions>\r\n      <template v-if=\"!maxContents(type)\">\r\n        <Button color=\"primary\" @click=\"openCategories\">\r\n          <Icon :path=\"mdiFileTree\" color=\"info\" />{{ translate(\"Categories\") }}\r\n        </Button>\r\n        <Button color=\"primary\" @click=\"add\">\r\n          <Icon :path=\"mdiPlusThick\" color=\"info\" />{{\r\n            `${translate(\"Add New\")} ${title}`\r\n          }}\r\n        </Button>\r\n      </template>\r\n    </template>\r\n    <template #actions=\"{ item }\">\r\n      <SeoModal :target=\"`content:${item.id}-`\" :title=\"item?.local?.title\" color=\"warning\" size=\"sm\"></SeoModal>\r\n      <Button color=\"info\" class=\"text-light btn btn-primary\" @click=\"edit(item)\" size=\"sm\">\r\n        <Icon :path=\"mdiPencil\" color=\"light\" />Edit\r\n      </Button>\r\n      <Button color=\"danger\" class=\"text-light btn btn-danger\" @click=\"remove(item)\" size=\"sm\">\r\n        <Icon :path=\"mdiDelete\" color=\"light\" />Delete\r\n      </Button>\r\n    </template>\r\n    <template #idValue=\"{ item }\">\r\n      <Ref v-if=\"item.id\" :key=\"item.id\" :value=\"item.id\" :start-with=\"`cms.contents.${id > 0 ? `${id}.` : ``}${type}`\">\r\n        {{ item.id }}\r\n      </Ref>\r\n    </template>\r\n    <template #titleValue=\"{ item }\">\r\n      {{ item.local?.title ?? na() }}\r\n    </template>\r\n    <template #details=\"{ item }\">\r\n      <EditorView :content=\"item.local?.blocks\" />\r\n    </template>\r\n  </Crud>\r\n  <ModalForm :name=\"title\" :model-class=\"Content\" fullscreen ref=\"modal\" @save=\"save\">\r\n    <template #header>\r\n      <Navs type=\"pills\" :tabs=\"tabs\" alignment=\"center\" @select=\"select\" style=\"flex: auto\"></Navs>\r\n    </template>\r\n    <template #=\"{ model }\">\r\n      <TabContent :tabs=\"tabs\" type=\"tabs\" disable-navs ref=\"tabContent\">\r\n        <template v-for=\"(language, i) in languages()\" :key=\"language.value\" #[language.value]=\"{ tab }\">\r\n          <div class=\"row h-100\" :style=\"[\r\n            language.value === 'ar'\r\n              ? { direction: 'rtl' }\r\n              : { direction: 'ltr' },\r\n          ]\">\r\n            <div class=\"col-md-3\">\r\n              <div class=\"position-sticky top-0\">\r\n                <div class=\"mb-3\">\r\n                  <StringInput :field=\"model.locals[i].title\" :style=\"[\r\n                    language.value === 'ar'\r\n                      ? { direction: 'rtl', 'text-align': 'right' }\r\n                      : { direction: 'ltr', 'text-align': 'left' },\r\n                  ]\"></StringInput>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                  <TextInput :field=\"model.locals[i].excerpt\" :style=\"[\r\n                    language.value === 'ar'\r\n                      ? { direction: 'rtl', 'text-align': 'right' }\r\n                      : { direction: 'ltr', 'text-align': 'left' },\r\n                    { height: '300px' },\r\n                  ]\"></TextInput>\r\n                </div>\r\n                <AttrsInput :model=\"model.locals[i].attrs\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-9\" :ref=\"updateTextCol\">\r\n              <Wait v-if=\"textCols[i]\" :time=\"800\">\r\n                <EditorInput :field=\"model.locals[i].blocks\" :rtl=\"language.value === 'ar'\"\r\n                  :altitude=\"textCols[0].clientHeight - 18\" no-label></EditorInput>\r\n              </Wait>\r\n            </div>\r\n          </div>\r\n        </template>\r\n        <template #settings=\"{ tab }\">\r\n          <div class=\"row h-100\">\r\n            <div v-if=\"categories.length > 0\" :class=\"{ [settingsCols]: true }\">\r\n              <div class=\"categories-checks\">\r\n                <CheckInput v-if=\"categories.length > 0\" :field=\"model.categories\" :options=\"categories\"></CheckInput>\r\n              </div>\r\n            </div>\r\n            <div :class=\"{ [settingsCols]: true }\">\r\n              <AttrsInput :model=\"model.attrs1\" />\r\n              <div class=\"mb-3\">\r\n                <StringInput :field=\"model.position\"></StringInput>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <RadioInput :field=\"model.status\" inline :options=\"statusList\">\r\n                </RadioInput>\r\n              </div>\r\n            </div>\r\n            <div v-if=\"model.attrs2.length > 0\" :class=\"{ [settingsCols]: true }\">\r\n              <AttrsInput :model=\"model.attrs2\" />\r\n            </div>\r\n            <div v-if=\"model.attrs3.length > 0\" :class=\"{ [settingsCols]: true }\">\r\n              <AttrsInput :model=\"model.attrs3\" />\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </TabContent>\r\n    </template>\r\n  </ModalForm>\r\n  <Modal ref=\"categoriesModal\" :title=\"`Categories of ${title} `\" size=\"lg\" @close=\"closeCategories\">\r\n    <Categories :type=\"type\" :id=\"id\"></Categories>\r\n  </Modal>\r\n</template>\r\n","/**\n * Contents.vue Startup File\n *\n * @project tripoline\n * @company Codendot <https://codendot.com>\n * @author Jawdat Sobh <jawdat@codendot.com>\n * @since Thursday, August 17, 2023 at 11:34 AM GMT+3\n *\n */\n\nimport { createApp } from \"@/lib/app\"\nimport AppComponent from \"../apps/Contents.vue\"\nimport bootstrap from \"../bootstrap/Contents\"\n\nconst app = createApp(\"contents\", AppComponent)\nbootstrap(app)\napp.mount()\n"],"names":["fields","setFields","createPrivateField","Attrs","Model","type","column","initData","section","typeName","types","element","fieldsList","_d","_c","_b","_a","cms","row","self","data","field","ContentLocal","__publicField","StringRule","RequiredRule","Content","list","active","ref","__props","select","tab","emit","__expose","timer","onUnmounted","splitType","name","id","maxContents","hasMax","key","config","CategoryLocal","Category","expanded","children","loader","toggle","nextTick","fetch","dataFactory","inject","doRefresh","provide","refresh","directive","el","binding","vnode","event","vClickOutside","contextMenu","x","y","open","calculatePosition","close","clientX","clientY","vw","vh","width","height","tooltips","options","Tooltip","vTooltip","cache","components","instance","getCurrentInstance","items","selectedItem","force","resolve","findSelectedItem","api","item","updateItem","word","ucFirst","save","oldId","newId","component","index","onMounted","modal","tree","refresher","tabContent","factory","args","callback","parent","add","edit","model","done","request","tabs","computed","languages","language","mdiTranslate","mdiCogOutline","statusList","crud","categoriesModal","categories","textCols","createFields","FieldType","title","record","successToast","remove","confirm","confirmed","updateTextCol","settingsCols","fetchCategories","displayTree","prefix","level","hasChildren","icon","mdiRayStart","openCategories","closeCategories","app","createApp","AppComponent"],"mappings":"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"}